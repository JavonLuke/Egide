@using Website.Data;
@using Website.Models;

@{
    ViewBag.Title = "Contact";
    ViewBag.Name = "Name";
    ViewBag.Price = 20;
    ViewBag.SearchString = "First Clothing";
}

<style>
    .img-info {
        margin: 20px;
    }

    outline{
        border: solid;
        border-width: 5px;
        border-color: black;
        border-bottom: double;
        

    }
</style>

<h2>@ViewBag.Title.</h2>
<h3>@ViewBag.Message</h3>
@*This is for the search page, it will go through and populate all of the names that equal the word that was typed in*@
<div class="container">
    @foreach (var item in Active1.search(ViewBag.SearchString))
    {       
            <div class="col-xs-6 col-sm-6 col-md-4">
                <div class="container merch">
                    <h1>@item.Id</h1>
                    <img src="~/Images/@item.ImageName" alt="@item.Name" class="img-responsive merch-img" height="100" width="100" />
                    <div class="merch-info">
                        <p class="merch-name">@item.Name</p>
                        <p class="merch-size">@item.Size</p>
                    </div>
                </div>
            </div>
    }
</div>






@*This is for the individual search page for each item*@
<div class="row">
<div class="container outline col-xs-6">
   <img width="220" height="220" src="~/Images/first-clothingextra-large.jpg" class="img-responsive img-info">
    
    <div class="container pull-left">
        <img width="50" height="50" src="~/Images/first-clothingextra-large.jpg" class="img-responsive img-info">
        <img width="50" height="50" src="~/Images/first-clothingextra-large.jpg" class="img-responsive img-info">
        <img width="50" height="50" src="~/Images/first-clothingextra-large.jpg" class="img-responsive img-info">
        <img width="50" height="50" src="~/Images/first-clothingextra-large.jpg" class="img-responsive img-info">
    </div>
</div>

<div class="container outline col-xs-6">
    <p>Name: @ViewBag.Name</p>
    <p>Price: @ViewBag.Price $</p>
    <img width="220" height="220" src="~/Images/first-clothingextra-large.jpg" class="img-responsive pull-left img-info">
</div>
</div>


<address>
    One Microsoft Way<br />
    Redmond, WA 98052-6399<br />
    <abbr title="Phone">P:</abbr>
    425.555.0100
</address>

<div class="media">
    <div class="media-left">
        <a href="#">
            <img class="media-object img-responsive" src="~/Images/brand.jpg" alt="..." width="220" height="220">
        </a>
    </div>
    <div class="media-body">
        <p class="outline">
            Lots of text here...With the four tiers of grids available you're bound to run into issues where,
            at certain breakpoints, your columns don't clear quite right as one is taller than the other. To fix that, use a
            combination of a .clearfix and oLots of text here...With the four tiers of grids available you're bound to run into issues where,
            at certain breakpoints, your columns don't clear quite right as one is taller than the other. To fix that, use a
            combination of a .clearfix and oLots of text here...With the four tiers of grids available you're bound to run into issues where,
            at certain breakpoints, your columns don't clear quite right as one is taller than the other. To fix that, use a
            combination of a .clearfix and oLots of text here...With the four tiers of grids available you're bound to run into issues where,
            at certain breakpoints, your columns don't clear quite right as one is taller than the other. To fix that, use a
            combination of a .clearfix and oLots of text here...With the four tiers of grids available you're bound to run into issues where,
            at certain breakpoints, your columns don't clear quite right as one is taller than the other. To fix that, use a
            combination of a .clearfix and o
        </p>
       
    </div>
</div>

<address>
    <strong>Support:</strong>   <a href="mailto:Support@example.com">Support@example.com</a><br />
    <strong>Marketing:</strong> <a href="mailto:Marketing@example.com">Marketing@example.com</a>
</address>

<div class="container">
    <div class="row">
   
    <img width="220" height="220" src="~/Images/first-clothingextra-large.jpg" class="img-responsive pull-left img-info">
       
        <p>           
            Lots of text here...With the four tiers of grids available you're bound to run into issues where,
            at certain breakpoints, your columns don't clear quite right as one is taller than the other. To fix that, use a
            combination of a .clearfix and oLots of text here...With the four tiers of grids available you're bound to run into issues where,
            at certain breakpoints, your columns don't clear quite right as one is taller than the other. To fix that, use a
            combination of a .clearfix and oLots of text here...With the four tiers of grids available you're bound to run into issues where,
            at certain breakpoints, your columns don't clear quite right as one is taller than the other. To fix that, use a
            combination of a .clearfix and oLots of text here...With the four tiers of grids available you're bound to run into issues where,
            at certain breakpoints, your columns don't clear quite right as one is taller than the other. To fix that, use a
            combination of a .clearfix and oLots of text here...With the four tiers of grids available you're bound to run into issues where,
            at certain breakpoints, your columns don't clear quite right as one is taller than the other. To fix that, use a
            combination of a .clearfix and o
        </p>
      
        </div>
    </div>
     

    <div class="nav second-nav text-center">
        <ul class="nav nav-pills nav-stacked">
            <li class='@Html.IsActive("Home", "Index")'>@Html.ActionLink("Home1", "Index", "Home")</li>
            <li class='@Html.IsActive("Home", "About")'>@Html.ActionLink("About2", "About", "Home")</li>
            <li class='@Html.IsActive("Home", "Contact")'>@Html.ActionLink("Contact3", "Contact", "Home")</li>
        </ul>
    </div>


      
